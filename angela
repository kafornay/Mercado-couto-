<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <title>Angela Maia - Personalize sua Imagem</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:ital,wght@0,400;0,700;1,400&family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #CFA5E6;
            --primary-dark: #B47CD6;
            --background-light: #F6F0FA;
            --card-background: #FFFFFF;
            --text-dark: #222222;
            --text-medium: #666666;
            --text-light: #FFFFFF;
            --border-color: #D8B7E2;
            --focus-shadow: rgba(207, 165, 230, 0.4);
            --card-shadow: rgba(0, 0, 0, 0.08);
        }

        body {
            font-family: 'Roboto', sans-serif;
            background: var(--background-light);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            margin: 0;
            padding: 15px;
            color: var(--text-dark);
            box-sizing: border-box;
            line-height: 1.6;
        }

        .card {
            background: var(--card-background);
            border-radius: 16px;
            box-shadow: 0 6px 18px var(--card-shadow);
            padding: 25px;
            width: 95%;
            max-width: 650px;
            display: flex;
            flex-direction: column;
            gap: 22px;
            box-sizing: border-box;
            border: 1px solid var(--border-color);
        }

        h2 {
            font-family: 'Playfair Display', serif;
            font-weight: 700;
            font-size: 32px;
            color: var(--primary-color);
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.08);
        }

        h2 .diamond-icon {
            font-size: 36px;
            color: var(--primary-color);
            line-height: 1;
        }

        h3 {
            font-family: 'Roboto', sans-serif;
            font-weight: 600;
            font-size: 18px;
            color: var(--text-dark);
            margin-top: 18px;
            margin-bottom: 10px;
            text-align: left;
            width: 100%;
            border-bottom: 1px solid var(--border-color);
            padding-bottom: 8px;
        }

        p, label {
            font-size: 14px;
        }

        input[type='file'], input[type='number'], input[type='color'], textarea, select {
            padding: 10px;
            font-size: 14px;
            border-radius: 6px;
            border: 1px solid var(--border-color);
            width: 100%;
            box-sizing: border-box;
        }

        textarea { min-height: 80px; }

        .description-controls {
            display: flex;
            align-items: center;
            margin-top: 5px;
            margin-bottom: 10px;
            flex-wrap: wrap;
            gap: 5px;
        }

        .description-controls button {
            padding: 6px 10px;
            font-size: 12px;
            border-radius: 4px;
        }

        .valor-container { padding: 15px; font-size: 20px; gap: 10px; }

        button#downloadBtn {
            padding: 10px 15px;
            font-size: 14px;
        }

        .slide-group input[type='range'] { height: 5px; }

        input[type='color'] { height: 25px; width: 40px; }

        @media (min-width: 769px) {
            body { padding: 30px; }
            .card { padding: 40px; width: 90%; max-width: 760px; gap: 35px; }
            h2 { font-size: 38px; margin-bottom: 25px; gap: 18px; }
            h3 { font-size: 22px; margin-top: 25px; margin-bottom: 18px; padding-bottom: 15px; }
            p, label { font-size: 16px; }
            input[type='file'], input[type='number'], input[type='color'], textarea, select { font-size: 16px; padding: 12px 18px; }
            textarea { min-height: 120px; }
            button#downloadBtn { padding: 13px 28px; font-size: 16px; }
        }
    </style>
</head>
<body>
    <div class="card">
        <h2><span class="diamond-icon">ðŸ’Ž</span> Angela Maia</h2>
        <p>Crie imagens premium para seus produtos de forma elegante e prÃ¡tica.</p>

        <h3>1. Imagem do Produto</h3>
        <input type="file" id="upload" accept="image/*" />

        <h3>2. DescriÃ§Ã£o</h3>
        <textarea id="description" placeholder="Descreva seu produto..."></textarea>
        <div class="description-controls">
            <button type="button" onclick="copyDescription()">ðŸ“‹ Copiar</button>
            <button type="button" onclick="clearDescription()">ðŸ§¹ Limpar</button>
            <span>
                <label for="descFontSize">Tam:</label>
                <input type="number" id="descFontSize" value="36" min="12" max="72">
            </span>
            <span>
                <label for="descCor">Cor:</label>
                <input type="color" id="descCor" value="#FFFFFF">
            </span>
            <select id="descFontFamily">
                <option value="Playfair Display">Playfair Display</option>
                <option value="Roboto">Roboto</option>
                <option value="Inter">Inter</option>
                <option value="EB Garamond">EB Garamond</option>
                <option value="Poppins">Poppins</option>
            </select>
        </div>

        <h3>3. PreÃ§o e Logo</h3>
        <div class="valor-container">
            <label for="valor">Valor (ex: 99.99):</label>
            <input type="number" id="valor" step="0.01">
            <label for="valorCor">Cor:</label>
            <input type="color" id="valorCor" value="#DAA520">
            <label for="valorFontSize">Tam:</label>
            <input type="number" id="valorFontSize" value="40" min="12" max="72">
        </div>
        <input type="file" id="logoUpload" accept="image/png">

        <h3>4. Ajustes Visuais</h3>
        <label for="fundoCor">Fundo Faixa:</label>
        <input type="color" id="fundoCor" value="#000000">
        <label for="faixaTextoCor">Texto Faixa:</label>
        <input type="color" id="faixaTextoCor" value="#ffffff">
        <label for="faixaWidth">Largura Faixa (%):</label>
        <input type="range" id="faixaWidth" min="0" max="100" value="100">
        <label for="descriptionWidthPercentage">Largura DescriÃ§Ã£o (%):</label>
        <input type="range" id="descriptionWidthPercentage" min="10" max="100" value="80">

        <canvas id="canvas"></canvas>
        <button id="downloadBtn">ðŸ“¥ Baixar Imagem</button>
    </div>

    <script>
        const upload = document.getElementById('upload');
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');
        const descriptionInput = document.getElementById('description');
        const downloadBtn = document.getElementById('downloadBtn');
        const valorInput = document.getElementById('valor');
        const logoUpload = document.getElementById('logoUpload');
        const fundoCorInput = document.getElementById('fundoCor');
        const faixaTextoCorInput = document.getElementById('faixaTextoCor');
        const descCorInput = document.getElementById('descCor');
        const valorCorInput = document.getElementById('valorCor');
        const faixaWidthInput = document.getElementById('faixaWidth');
        const descFontSizeInput = document.getElementById('descFontSize');
        const descFontFamilyInput = document.getElementById('descFontFamily');
        const valorFontSizeInput = document.getElementById('valorFontSize');
        const descriptionWidthPercentageInput = document.getElementById('descriptionWidthPercentage');

        let img = new Image();
        let logoImg = null;
        let descPos = { x: 500, y: 80 };
        let valorPos = { x: 500, y: 140 };
        let faixaWidthPercentage = 100;
        let descFontSize = 36;
        let descFontFamily = 'Playfair Display';
        let valorFontSize = 40;
        let lines = [];
        let maxDescriptionWidthPercentage = 80;
        let imageScale = 1;
        const lineHeight = 1.2;
        let dragging = null;
        let dragOffset = { x: 0, y: 0 };

        function hexToRGBA(hex, alpha) {
            const r = parseInt(hex.slice(1, 3), 16);
            const g = parseInt(hex.slice(3, 5), 16);
            const b = parseInt(hex.slice(5, 7), 16);
            return `rgba(${r}, ${g}, ${b}, ${alpha})`;
        }

        function drawCanvas() {
            const baseCanvasWidth = 1000;
            const baseCanvasHeight = 1000;
            const extraHeight = 140;
            canvas.width = baseCanvasWidth;
            canvas.height = baseCanvasHeight + extraHeight;
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            if (img.src) {
                const scale = Math.min(baseCanvasWidth / img.width, baseCanvasHeight / img.height);
                imageScale = scale;
                const newWidth = img.width * scale;
                const newHeight = img.height * scale;
                const xOffset = (baseCanvasWidth - newWidth) / 2;
                const yOffset = (baseCanvasHeight - newHeight) / 2;
                ctx.drawImage(img, xOffset, yOffset, newWidth, newHeight);
            } else {
                ctx.fillStyle = '#f0f0f0';
                ctx.fillRect(0, 0, baseCanvasWidth, baseCanvasHeight);
                ctx.fillStyle = '#cccccc';
                ctx.font = '30px Roboto';
                ctx.textAlign = 'center';
                ctx.fillText('Envie uma imagem para comeÃ§ar!', baseCanvasWidth / 2, baseCanvasHeight / 2);
            }

            // Faixa inferior
            const faixaWidth = baseCanvasWidth * (faixaWidthPercentage / 100);
            const faixaX = (baseCanvasWidth - faixaWidth) / 2;
            ctx.fillStyle = hexToRGBA(fundoCorInput.value, 0.85);
            ctx.fillRect(faixaX, baseCanvasHeight, faixaWidth, extraHeight);

            // Texto faixa
            ctx.fillStyle = faixaTextoCorInput.value;
            ctx.font = 'bold 28px Roboto';
            ctx.textAlign = 'center';
            ctx.fillText('ðŸ’Ž Angela Maia', canvas.width / 2, baseCanvasHeight + 40);
            ctx.font = '22px Roboto';
            ctx.fillText('Aceito Encomendas!', canvas.width / 2, baseCanvasHeight + 70);
            ctx.font = '18px Roboto';
            ctx.fillText('ðŸ“± WhatsApp: 21 97221-7122', canvas.width / 2, baseCanvasHeight + 95);
            ctx.fillText('ðŸ“§ Email: angela.vithyca@gmail.com', canvas.width / 2, baseCanvasHeight + 120);

            // DescriÃ§Ã£o
            const description = descriptionInput.value.trim();
            if (description) {
                const words = description.split(' ');
                let line = '';
                lines = [];
                const maxWidth = 1000 * (maxDescriptionWidthPercentage / 100);
                ctx.font = `${descFontSize}px "${descFontFamily}", serif`;
                ctx.fillStyle = descCorInput.value;
                ctx.textAlign = 'center';
                ctx.shadowColor = 'rgba(0,0,0,0.3)';
                ctx.shadowOffsetX = 1;
                ctx.shadowOffsetY = 1;
                ctx.shadowBlur = 2;

                words.forEach(word => {
                    const testLine = line + word + ' ';
                    if (ctx.measureText(testLine).width < maxWidth) line = testLine;
                    else { lines.push(line.trim()); line = word + ' '; }
                });
                lines.push(line.trim());

                let y = descPos.y;
                lines.forEach(text => {
                    ctx.fillStyle = `rgba(0,0,0,0.08)`;
                    const metrics = ctx.measureText(text);
                    ctx.fillRect(descPos.x - metrics.width / 2 - 5, y - descFontSize * lineHeight + 2, metrics.width + 10, descFontSize * lineHeight - 4);
                    ctx.fillStyle = descCorInput.value;
                    ctx.fillText(text, descPos.x, y);
                    y += descFontSize * lineHeight;
                });
            }

            // Valor
            const valor = valorInput.value.trim();
            if (valor) {
                ctx.font = `bold ${valorFontSize}px Roboto`;
                ctx.fillStyle = valorCorInput.value;
                ctx.textAlign = 'center';
                ctx.shadowColor = 'rgba(0,0,0,0.3)';
                ctx.shadowOffsetX = 1;
                ctx.shadowOffsetY = 1;
                ctx.shadowBlur = 2;
                ctx.fillText(`R$ ${valor}`, valorPos.x, valorPos.y);
            }

            // Logo
            if (logoImg) {
                const logoSize = 120;
                ctx.shadowBlur = 0;
                ctx.drawImage(logoImg, canvas.width - logoSize - 25, 25, logoSize, logoSize);
            }
        }

        upload.addEventListener('change', e => { const file = e.target.files[0]; if(!file) return; const reader = new FileReader(); reader.onload = e => { img.src = e.target.result; }; reader.readAsDataURL(file); });
        logoUpload.addEventListener('change', e => { const file = e.target.files[0]; if(!file) return; const reader = new FileReader(); reader.onload = e => { logoImg = new Image(); logoImg.onload = drawCanvas; logoImg.src = e.target.result; }; reader.readAsDataURL(file); });
        img.onload = drawCanvas;
        document.addEventListener('DOMContentLoaded', drawCanvas);

        descriptionInput.addEventListener('input', drawCanvas);
        valorInput.addEventListener('input', drawCanvas);
        fundoCorInput.addEventListener('input', drawCanvas);
        faixaTextoCorInput.addEventListener('input', drawCanvas);
        descCorInput.addEventListener('input', drawCanvas);
        valorCorInput.addEventListener('input', drawCanvas);
        faixaWidthInput.addEventListener('input', () => { faixaWidthPercentage = parseInt(faixaWidthInput.value); drawCanvas(); });
        descFontSizeInput.addEventListener('input', () => { descFontSize = parseInt(descFontSizeInput.value); drawCanvas(); });
        descFontFamilyInput.addEventListener('change', () => { descFontFamily = descFontFamilyInput.value; drawCanvas(); });
        valorFontSizeInput.addEventListener('input', () => { valorFontSize = parseInt(valorFontSizeInput.value); drawCanvas(); });
        descriptionWidthPercentageInput.addEventListener('input', () => { maxDescriptionWidthPercentage = parseInt(descriptionWidthPercentageInput.value); drawCanvas(); });

        downloadBtn.addEventListener('click', () => {
            const link = document.createElement('a');
            link.download = 'angela-maia-produto.png';
            link.href = canvas.toDataURL('image/png');
            link.click();
        });

        function copyDescription() { if(descriptionInput.value.trim()) navigator.clipboard.writeText(descriptionInput.value.trim()).then(()=>alert('DescriÃ§Ã£o copiada!')); else alert('DescriÃ§Ã£o vazia.'); }
        function clearDescription() { descriptionInput.value=''; drawCanvas(); }
    </script>
</body>
</html>
